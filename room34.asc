// Geisterraum (Familie Stoppe)
int spuk;
/****************************
*   Raum-Funktionen
****************************/
function room_FirstLoad()
{
	Wait(40);
	player.Say("Brr... dieses Zimmer haben wir seit unserem Einzug noch nie bezogen.");
}

function room_Load()
{
	oTuer.init_object(32);
	
	StopMusic();  
	PlayAmbientSound (1, 100, 250, 0, 0);
	oBild.Visible = false;
	oBild.Clickable = false;
	
	oPuppe01.Visible = false;
	oPuppe02.Visible = false;
	oPuppe03.Visible = false;

	oSpieluhr.Graphic = 123;

	if ( Random(3) == 2 )
	{
		oBild.Visible = true;
	}
	object[Random(2)+3].Visible = true; // Puppe01, Puppe02 oder Puppe03 anzeigen
}

function room_RepExec()
{
	// Tuer und Spieluhr
	spuk = spuk + 1;
	if (spuk >= 400)
	{
		spuk = 0;
		if(Random(3) == 1)
		{
			if(GetGlobalInt(32) == 1)
			{
				SetGlobalInt(32,0);
				PlaySound(3);
				oTuer.Visible = false;
			}
			else if(Random(2) == 1)
			{
				oSpieluhr.SetView(56);
				oSpieluhr.Animate(0, 10, 1);
				PlayMusic(23);
			} 
		}
	}

	//Spieluhr aus
	if(GetMIDIPosition() >= 197)
	{
		SeekMIDIPosition(0);
		oSpieluhr.Animate(0, 10, 0);
		StopMusic();
	}
}


/****************************
*   Tür-Hotspot-Funktionen
****************************/
function hTuer_AnyClick()
{
	if ( any_click_on_door (32, oTuer, 116, 124, eDirUp, 30, 440, 135, eDirLeft) == 0 ) Unhandled ();
	
	if (UsedAction(eActOpen))
	{
		oSpieluhr.Graphic = 195;
		SeekMIDIPosition(0);
		StopMusic();
	}
}


/****************************
*   Objekt-Funktionen
****************************/
function oSpieluhr_AnyClick()
{
	if (any_click_move(80, 126, eDirLeft))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Eine alte Spieluhr.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Sie sollte hier bleiben.");
			Wait(10);
			player.FaceDirection(eDirDown);
			Wait(30);
			player.FaceDirection(eDirRight);
			Wait(30);
			player.FaceDirection(eDirDown);
			Wait(15);
			player.Say("Ich möchte mit niemandem Ärger ...");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Sie scheint kaputt zu sein.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Die spielt so gut, dass ich sie nicht öffnen will.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Die ist doch tz.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Die bleibt exakt da stehen.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Da muss man nichts reinwerfen.");
		}
		else Unhandled();
	}
}

function oPuppe01_AnyClick()
{
	player.FaceLocation(mouse.x, mouse.y);

	if (UsedAction(eActLookAt))
	{
		Wait(5);
		player.Say("Dieser böse Clown hat mir als Kind schon immer Angst eingejagt.");
	}
	else if (UsedAction(eActPickUp))
	{
		Wait(5);
		player.Say("Niemals!");
		player.Say("Ich habe kein gutes Gefühl dabei.");
	}
	else if (UsedAction(eActUse))
	{
		Wait(5);
		player.Say("Mit dem mache ich nichts.");
	}
	else if (UsedAction(eActOpen) || UsedAction(eActClose))
	{
		Wait(5);
		player.Say("Den fass ich nicht an.");
	}
	else if (UsedAction(eActPull) || UsedAction(eActPush))
	{
		Wait(5);
		player.Say("Den fass ich nicht an.");
	}
	else Unhandled();
}

function oPuppe02_AnyClick()
{
	oPuppe01_AnyClick();
}

function oPuppe03_AnyClick()
{
	oPuppe01_AnyClick();
}


/****************************
*   Hotspot-Funktionen
****************************/
function hFenster_AnyClick()
{
	if (any_click_move(44, 131, eDirLeft))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Von hier aus hat man einen deutlichen Blick auf den Stadtfriedhof ...");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das fasse ich nicht an.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Lüften wäre praktisch, aber der Fenstergriff ist so dreckig ...");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Nie im Leben. Erst muss das Fenster geputzt werden.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das ist schon zu.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das bringt nichts.");
		}
		else Unhandled();
	}
}

function hBett_AnyClick()
{
	if (any_click_walk(186, 141, eDirUp))
	{
	}
	else
	{
		player.FaceLocation(183, 119);

		if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Nicht gerade einladend ...");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das würde vermutlich zusammenfallen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Auf keinen Fall.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Der Bezug ist dermasßen staubig, dass ich den nicht anfasse.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das bringt nichts.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das würde vermutlich zusammenfallen.");
		}
		else if (UsedAction(eActUseInventory))
		{
			Wait(5);
			player.Say("Für wen sollte das als Kuscheltier herhalten?!");
		}
		else Unhandled();
	}
}

function hMauseloch_AnyClick()
{
	if (any_click_walk(85, 126, eDirUp))
	{
	}
	else
	{
		player.FaceLocation(85, 116);

		if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Da ist Ding mal drin stecken geblieben ...");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Du spielst nicht oft Adventures gell?");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Leer.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Das ist bereits groß genug.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Und mit was?");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das gäbe ein tolles Foto.");
			player.Say("Redakteur der Ronviller Schülerzeitung verschiebt Mauseloch.");
		}
		else if (UsedAction(eActUseInventory) && player.ActiveInventory == iDing )
		{
			Wait(5);
			player.Say("Nein, einmal hat gereicht!");
		}
		else Unhandled();
	}
}

function hSchrank_AnyClick()
{
	if (any_click_move(268, 132, eDirRight))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("In diesem Schrank haben unsere Vorbesitzer also den armen Jungen gefunden ...");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Die Türen scheinen zu klemmen ...");
			Wait(10);
			player.FaceDirection(eDirDown);
			Wait(10);
			player.Say("... oder irgendetwas hält sie von innen zu ...");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("");
		}
		else Unhandled();
	}
}

function hBild_AnyClick()
{
	if (any_click_walk(242, 122, eDirUp))
	{
	}
	else
	{
		player.FaceLocation(242, 112);

		if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Das Bild muss schon Ewigkeiten hier hängen.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Es lässt sich nicht von der Wand entfernen.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ein interesantes Bild. Es wechselt ständig.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Das Bild lässt sich nicht öffnen.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Dann beißt es.");
		}
		else Unhandled();
	}
}


/****************************
*   Regionen-Funktionen
****************************/
