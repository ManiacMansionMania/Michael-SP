// Dunkelkammer (Familie Stoppe)
/****************************
*   Raum-Funktionen (global)
****************************/
bool PrepareRoomAreaOn()
{
	SetBackgroundFrame(1);
	region[1].LightLevel = -80;
	region[2].LightLevel = -80;
	region[3].LightLevel = -80;
	region[4].LightLevel = -80;
	region[5].LightLevel = -80;
	return true;
}

bool PrepareRoomAreaOff()
{
	region[1].LightLevel = 0;
	region[2].LightLevel = 0;
	region[3].LightLevel = 0;
	region[4].LightLevel = 0;
	region[5].LightLevel = 0;
	return true;
}

bool PrepareRoomTint()
{
	SetBackgroundFrame(2);
	region[1].Tint(20, 0, 0, 80);
	region[2].Tint(20, 0, 0, 70);
	region[3].Tint(20, 0, 0, 60);
	region[4].Tint(20, 0, 0, 50);
	region[5].Tint(20, 0, 0, 30);
	return true;
}


/****************************
*   Raum-Funktionen
****************************/
function room_Load()
{
	oTuer.init_object(31);
	
	if ( GetGlobalInt(34) == 1 )
	{
		SetBackgroundFrame(0);
		PrepareRoomAreaOff();
	
	}
	else if ( GetGlobalInt(35) == 1 )
	{
		PrepareRoomTint();
	}
	else
	{
		PrepareRoomAreaOn();
	}
}

function room_FirstLoad()
{
	SetBackgroundFrame(0);
	SetGlobalInt(34,1);  
	hRolladenZu.Enabled = false;
}


/****************************
*   Tür-Hotspot-Funktionen
****************************/
function hTuer_AnyClick()
{
	if ( any_click_on_door (31, oTuer, 42, 138, eDirLeft, 30, 315, 129, eDirDown) == 0 ) Unhandled ();
}


/****************************
*   Objekt-Funktionen
****************************/



/****************************
*   Hotspot-Funktionen
****************************/
function hRolladenAuf_AnyClick()
{
	if (any_click_move(258, 140, eDirRight))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein Rollo.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Dann kann ich keine Fotos mehr entwickeln.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("So klappt das nicht.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
		
			if ( GetGlobalInt(34) == 1 )
			{
				player.Say("Er ist bereits offen.");
			}
			else
			{
				Wait(25);
				PlaySound(37);
				SetBackgroundFrame(0);
				SetGlobalInt(34,1);
				hRolladenZu.Enabled = false;
				SetBackgroundFrame(0);
				PrepareRoomAreaOff();
			}
		}
		else if (UsedAction(eActClose) || UsedAction(eActPull))
		{
			Wait(5);
			if ( GetGlobalInt(34) == 0 )
			{
				player.Say("Er ist bereits geschlossen.");
			}
			else
			{
				Wait(25);
				PlaySound(37);
				if(GetGlobalInt(35)==1)
				{
					PrepareRoomTint();
				}
				else
				{
					PrepareRoomAreaOn();        
				}
				SetGlobalInt(34, 0);
				hRolladenZu.Enabled = true;
			}
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Nein.");
		}
		else Unhandled();
	}
}

function hRolladenZu_AnyClick()
{
	if (any_click_move(258, 140, eDirRight))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ein Rollo.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Dann kann ich keine Fotos mehr entwickeln.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("So klappt das nicht.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			if(GetGlobalInt(34) == 1)
			{
				player.Say("Er ist bereits offen.");
			}
			else
			{
				Wait(25);
				PlaySound(37);
				SetBackgroundFrame(0);
				SetGlobalInt(34,1);
				hRolladenZu.Enabled = false;
				PrepareRoomAreaOff();
    }
		}
		else if (UsedAction(eActClose) || UsedAction(eActPull))
		{
			Wait(5);
			if(GetGlobalInt(34) == 0)
			{
				player.Say("Er ist bereits geschlossen.");
			}
			else
			{
				Wait(25);
				PlaySound(37);
				if(GetGlobalInt(35)==1)
				{
					PrepareRoomTint();
				}
				else
				{
					PrepareRoomAreaOn();
				}
				SetGlobalInt(34,0);
				hRolladenZu.Enabled = true;
			}
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Nein.");
		}
		else Unhandled();
	}
}

function hRotlicht_AnyClick()
{
	if (any_click_move(246, 137, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Meine Rotlichtlampe.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Die brauche ich zum Foto-Entwickeln.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			PlaySound(84);

			if(GetGlobalInt(35) == 1)
			{
				SetGlobalInt(35,0);
				if(GetGlobalInt(34) == 0)
				{
					PrepareRoomAreaOn();
				}
			}
			else
			{
				SetGlobalInt(35,1);  
				if(GetGlobalInt(34) == 0)
				{
					PrepareRoomTint();      
				}  
			}
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Ich habe nur diese eine rote Glühbirne. Die schraube ich nicht ab.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Das geht nicht.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das möchte ich nicht.");
		}
		else Unhandled();
	}
}

function hFoto01_AnyClick()
{
	if (any_click_move(66, 140, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Oh nein, das ist Mrs Edison ...");
			player.Say("... ein Glück, dass sie zumindest etwas anhat ...");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich werde es später einsortieren.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Das Foto trocknet noch.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Spielst du zum ersten mal Adventures?");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Spielst du zum ersten mal Adventures?");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Es ist noch leicht feucht.");
		}
		else Unhandled();
	}
}

function hFoto02_AnyClick()
{
	if (any_click_move(89, 140, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Für einsame Stunden.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich werde es später einsortieren.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Das Foto trocknet noch.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Spielst du zum ersten mal Adventures?");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Spielst du zum ersten mal Adventures?");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Es ist noch leicht feucht.");
		}
		else Unhandled();
	}
}

function hFoto03_AnyClick()
{
	if (any_click_move(128, 140, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Ich habe mich in letzter Zeit intensiv mit Feuern beschäftigt.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich werde es später einsortieren.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Das Foto trocknet noch.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Spielst du zum ersten mal Adventures?");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Spielst du zum ersten mal Adventures?");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Es ist noch leicht feucht.");
		}
		else Unhandled();
	}
}

function hFoto04_AnyClick()
{
	if (any_click_move(61, 140, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Mein Genosse, ich werde ihn einrahmen.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich werde es später einsortieren.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Das Foto trocknet noch.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Spielst du zum ersten mal Adventures?");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Spielst du zum ersten mal Adventures?");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Es ist noch leicht feucht.");
		}
		else Unhandled();
	}
}

function hFotos_AnyClick()
{
	if (any_click_move(108, 140, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Meine neuesten Schätze ...");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich werde es später einsortieren.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Das Foto trocknet noch.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Spielst du zum ersten mal Adventures?");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Spielst du zum ersten mal Adventures?");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Es ist noch leicht feucht.");
		}
		else Unhandled();
	}
}

function hVergroesserer_AnyClick()
{
	if (any_click_move(172, 137, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Der eBay-Seller hieß \'Edna-Mausi69\'.");
			player.Say("Bernard hatte mich zwar gewarnt, aber ich musste ihn einfach haben.");
			Wait(10);
			player.FaceDirection(eDirDown);
			Wait(10);
			player.Say("... den Vergößerer natürlich ... nicht Bernard!");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Den mussten wir zu zweit hereintragen. Den schaffe ich nicht alleine.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich habe gerade keine Fotos, die ich vergrößern möchte.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Der funktioniert wunderbar. Den will ich nicht öffnen.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Der ist bereits verschraubt.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Der passt nur an dieses Sideboard-Eck.");
		}
		else Unhandled();
	}
}

function hSchale_AnyClick()
{
	if (any_click_move(231, 141, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Eine leere Schale.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich brauche keine Schale.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Wenn ich nur Entwickler hätte.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Die Schale hat keinen Deckel.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Warum?");
		}
		else Unhandled();
	}
}

function hPoster_AnyClick()
{
	if (any_click_move(212, 138, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Hilfen zur Perspektive und Beleuchtung.");
			Wait(5);
			player.FaceDirection(eDirDown);
			Wait(5);
			player.Say("Nicht das ich das nötig hätte!");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Später vielleicht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Hmm ...");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Nicht in diesem Adventure.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Damit reiße ich es nur von der Wand. Also nein.");
		}
		else Unhandled();
	}
}

function hWaschbecken_AnyClick()
{
	if (any_click_walk(85, 138, eDirUp))
	{
	}
	else
	{
		player.FaceLocation(87, 117);

		if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Der letzte Hinweis auf die ursprüngliche Verwendung des Raumes.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Das ist an der Wand festgemacht.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Mein Hände sind sauber, und andere Sachen in diesem Raum bedürfen keiner Reinigung.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Um Wasser zu verschwenden?");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Der Wasserhahn ist bereits zu.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Arnie lässt grüssen.");
		}
		else Unhandled();
	}
}

function hRohre_AnyClick()
{
	if (any_click_walk(117, 135, eDirUp))
	{
	}
	else
	{
		player.FaceLocation(117, 110);

		if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Die Warmwasserleitungen.");
			player.Say("Wenn ich Frust habe spiele ich daran rum.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Ich habe keinen Frust.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Ich habe keinen Frust.");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Ich habe keinen Frust.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Ich habe keinen Frust.");
		}
		else Unhandled();
	}
}

function hZeitungen_AnyClick()
{
	if (any_click_move(mouse.x, mouse.y + 10, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Dafür ist die Ronville Times gerade gut genug.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Die liegen da aus gutem Grund.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Romville! Eine aufregende Mordserie ...");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Die sind doch schon aufgeklappt.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Um die zu schützende Bodenfläche zu verkleinern? Nein!");
		}
		else if (UsedAction(eActPull) ||UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Die liegen da aus gutem Grund.");
		}
		else Unhandled();
	}
}

function hSchraenke_AnyClick()
{
	if (any_click_walk(233, 136, eDirUp))
	{
	}
	else
	{
		player.FaceLocation(mouse.x, mouse.y);

		if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Darin sind Fotoalben und alle Materialen die man zum Entwickeln von Fotos braucht.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Die sind mir zu schwer.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Das sind nur alte Fotos drin.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Das sind nur alte Fotos drin.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Alle Schubladen sind geschlossen.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Das bringt nichts.");
		}
		else Unhandled();
	}
}


/****************************
*   Regionen-Funktionen
****************************/
